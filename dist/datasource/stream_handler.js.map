{"version":3,"sources":["../../src/datasource/stream_handler.js"],"names":[],"mappings":"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","file":"stream_handler.js","sourcesContent":["import moment from 'moment';\nimport {Subject} from 'vendor/npm/rxjs/Subject';\n\nexport class StreamHandler {\n\n  constructor(options, datasource) {\n    this.options = options;\n    this.ds = datasource;\n    this.subject = new Subject();\n  }\n\n  start() {\n    if (this.source) {\n      this.source.close();\n    }\n\n    var target = this.options.targets[0];\n    if (!target.taskId) {\n      return;\n    }\n\n    this.ds.getTask(target.taskId).then(task => {\n      if (!task) {\n        return;\n      }\n\n      console.log('StreamHandler: start()', task);\n\n      this.task = task;\n      var watchUrl = this.ds.url + '/v1/tasks/' + task.id + '/watch';\n      this.source = new EventSource(watchUrl);\n      this.source.onmessage = this.onMessage.bind(this);\n      this.source.onerror = this.onError.bind(this);\n      this.source.onopen = this.onOpen.bind(this);\n      this.source.onclose = this.onClose.bind(this);\n      this.metrics = {};\n    });\n  }\n\n  onMessage(evt) {\n    var data = JSON.parse(evt.data);\n    if (data.type === 'metric-event') {\n      this.processMetricEvent(data);\n    }\n  }\n\n  onError(evt) {\n    console.log('stream error', evt);\n  }\n\n  onClose(evt) {\n    console.log('stream closed', evt);\n  }\n\n  onOpen(evt) {\n    console.log('stream opened', evt);\n  }\n\n  stop() {\n    console.log('Forcing event stream close');\n    if (this.source) {\n        this.source.close();\n    }\n    this.source = null;\n  }\n\n  subscribe(options) {\n    return this.subject.subscribe(options);\n  }\n\n  processMetricEvent(data) {\n    var endTime = new Date().getTime();\n    var startTime = endTime - (60 * 1 * 1000);\n    var seriesList = [];\n\n    for (var i = 0; i < data.event.length; i++) {\n      var point = data.event[i];\n      var series = this.metrics[point.namespace];\n      if (!series) {\n        series = {target: point.namespace, datapoints: []};\n        this.metrics[point.namespace] = series;\n      }\n\n      var time = new Date(point.timestamp).getTime();\n      series.datapoints.push([point.data, time]);\n      seriesList.push(series);\n    }\n\n    this.subject.next({\n      data: seriesList,\n      range: {from: moment(startTime), to: moment(endTime)}\n    });\n  }\n}\n\n"]}